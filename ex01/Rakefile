# frozen_string_literal: true

require "#{__dir__}/app/application"

StandaloneMigrations::Tasks.load_tasks

namespace :data do
  desc "Load professions records in database"
  task :load_professions, [:filepath] do |_, args|
    args.with_defaults(filepath: "db/data/technical-test-professions.csv")

    professions = []

    CSV.foreach(args.filepath, headers: true) do |row|
      professions << row.to_h.slice("id", "category_name")
    end

    Profession.upsert_all(professions)
  end

  desc "Load job offers records in database"
  task :load_job_offers, [:filepath, :batch_size] do |_, args|
    args.with_defaults(filepath: "db/data/technical-test-jobs.csv", batch_size: 1000)

    job_offers = []

    CSV.foreach(args.filepath, headers: true) do |row|
      job_offers << row.to_h.slice("profession_id", "office_latitude", "office_longitude")

      if job_offers.size >= args.batch_size
        JobOffer.upsert_all(job_offers)
        job_offers = []
      end
    end

    JobOffer.upsert_all(job_offers)
  end
end

namespace :results do
  task :print do
    table_rows = JobsCountService.call
    headings = [""] + Profession::CATEGORIES

    table = Terminal::Table.new(
      rows: table_rows,
      headings: headings
    )

    puts table
  end
end
